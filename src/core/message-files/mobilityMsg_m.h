//
// Generated file, do not edit! Created by nedtool 4.6 from core/message-files/mobilityMsg.msg.
//

#ifndef _MOBILITYMSG_M_H_
#define _MOBILITYMSG_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>core/message-files/mobilityMsg.msg:2</tt> by nedtool.
 * <pre>
 * enum MobilityType
 * {
 * 
 *     MOB_DATA = 0;
 *     MOB_ACK = 1;
 *     MOB_NACK = 2;
 *     MOB_EVENT = 3;
 *     MOB_PUBLISH = 4;
 *     MOB_UPDATE = 5;
 *     MOB_KEEPALIVE = 6;
 *     MOB_UNKNOWN = 7;
 * }
 * </pre>
 */
enum MobilityType {
    MOB_DATA = 0,
    MOB_ACK = 1,
    MOB_NACK = 2,
    MOB_EVENT = 3,
    MOB_PUBLISH = 4,
    MOB_UPDATE = 5,
    MOB_KEEPALIVE = 6,
    MOB_UNKNOWN = 7
};

/**
 * Class generated from <tt>core/message-files/mobilityMsg.msg:14</tt> by nedtool.
 * <pre>
 * packet MobilityPacket extends cPacket
 * {
 *     int kind @enum(MobilityType);
 *     int source;
 *     int destination;
 *     uint64_t seqno;
 *     int channelMap[];
 * }
 * </pre>
 */
class MobilityPacket : public ::cPacket
{
  protected:
    int kind_var;
    int source_var;
    int destination_var;
    uint64_t seqno_var;
    int *channelMap_var; // array ptr
    unsigned int channelMap_arraysize;

  private:
    void copy(const MobilityPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const MobilityPacket&);

  public:
    MobilityPacket(const char *name=NULL, int kind=0);
    MobilityPacket(const MobilityPacket& other);
    virtual ~MobilityPacket();
    MobilityPacket& operator=(const MobilityPacket& other);
    virtual MobilityPacket *dup() const {return new MobilityPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getKind() const;
    virtual void setKind(int kind);
    virtual int getSource() const;
    virtual void setSource(int source);
    virtual int getDestination() const;
    virtual void setDestination(int destination);
    virtual uint64_t getSeqno() const;
    virtual void setSeqno(uint64_t seqno);
    virtual void setChannelMapArraySize(unsigned int size);
    virtual unsigned int getChannelMapArraySize() const;
    virtual int getChannelMap(unsigned int k) const;
    virtual void setChannelMap(unsigned int k, int channelMap);
};

inline void doPacking(cCommBuffer *b, MobilityPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, MobilityPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef _MOBILITYMSG_M_H_

