//
// Generated file, do not edit! Created by nedtool 4.6 from core/message-files/timerMsg.msg.
//

#ifndef _TIMERMSG_M_H_
#define _TIMERMSG_M_H_

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0406
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>core/message-files/timerMsg.msg:2</tt> by nedtool.
 * <pre>
 * enum timerType
 * {
 * 
 *     publishSENSING = 100;
 *     senseFREE = 101;
 *     senseDATA = 102;
 *     sensePROPOSED = 103;
 * }
 * </pre>
 */
enum timerType {
    publishSENSING = 100,
    senseFREE = 101,
    senseDATA = 102,
    sensePROPOSED = 103
};

/**
 * Class generated from <tt>core/message-files/timerMsg.msg:10</tt> by nedtool.
 * <pre>
 * message timerMsg
 * {
 *     int type;
 *     int newType @enum(timerType);
 * }
 * </pre>
 */
class timerMsg : public ::cMessage
{
  protected:
    int type_var;
    int newType_var;

  private:
    void copy(const timerMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const timerMsg&);

  public:
    timerMsg(const char *name=NULL, int kind=0);
    timerMsg(const timerMsg& other);
    virtual ~timerMsg();
    timerMsg& operator=(const timerMsg& other);
    virtual timerMsg *dup() const {return new timerMsg(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getType() const;
    virtual void setType(int type);
    virtual int getNewType() const;
    virtual void setNewType(int newType);
};

inline void doPacking(cCommBuffer *b, timerMsg& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, timerMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef _TIMERMSG_M_H_

